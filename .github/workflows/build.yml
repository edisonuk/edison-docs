name: Build and Deploy to GitHub Pages

env:
  NODE_ENV: production
  NODE_VERSION: 17
  RUBY_VERSION: 2.6

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: "Cache: Get yarn cache directory path"
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: "Cache: Setup up yarn cache"
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: "Cache: Setup bundler cache"
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with: 
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Set up dependencies
        run: |
          yarn install --frozen-lockfile
          gem update --system --no-document
          gem update bundler --no-document
          bundle config set path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Build site
        run: bundle exec jekyll build --verbose --trace

      - name: Deploy to GitHub Pages
        run: |
          pushd _site &>/dev/null
          : > .nojekyll
          
          REMOTE_BRANCH="${REMOTE_BRANCH:-gh-pages}"
          REMOTE_REPO="https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"

          git init

          echo "Deploying to ${GITHUB_REPOSITORY} on branch ${REMOTE_BRANCH}"
          echo "Deploying to ${REMOTE_REPO}"

          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

          git add --all
          git commit --quiet --message "Deploy docs from ${GITHUB_SHA}"
          git push --force $REMOTE_REPO HEAD:$REMOTE_BRANCH
          
          popd &>/dev/null
